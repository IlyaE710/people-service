{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server celler server.",
        "title": "Swagger Example API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "${SWAGGER_HOST}",
    "basePath": "${SWAGGER_BASE_PATH}",
    "paths": {
        "/v1/people": {
            "post": {
                "description": "Создает нового пользователя с использованием предоставленных данных",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "People"
                ],
                "summary": "Создание нового пользователя",
                "parameters": [
                    {
                        "description": "Данные для создания пользователя",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreatePeopleRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/people/": {
            "get": {
                "description": "Получает список всех людей.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "People"
                ],
                "summary": "Получение списка всех людей",
                "operationId": "get-all-people",
                "responses": {
                    "200": {
                        "description": "Успешный ответ",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/dto.PeopleResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Человек не найден",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Обновляет информацию о человеке на основе переданных данных.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "People"
                ],
                "summary": "Обновление данных о человеке",
                "parameters": [
                    {
                        "description": "Данные для обновления пользователя",
                        "name": "updateRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdatePeopleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/people/{id}": {
            "delete": {
                "description": "Удаляет человека по указанному идентификатору.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "People"
                ],
                "summary": "Удалить человека",
                "operationId": "delete-people",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "description": "Идентификатор человека",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid ID format",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/people/{name}": {
            "get": {
                "description": "Получает информацию о человеке по его имени.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "People"
                ],
                "summary": "Получение информации о человеке по имени",
                "operationId": "get-people-by-name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Имя человека",
                        "name": "name",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешный ответ",
                        "schema": {
                            "$ref": "#/definitions/dto.PeopleResponse"
                        }
                    },
                    "400": {
                        "description": "Ошибка запроса",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Человек не найден",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.CountryRequest": {
            "type": "object",
            "properties": {
                "country-id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "probability": {
                    "type": "number"
                }
            }
        },
        "dto.CountryResponse": {
            "type": "object",
            "properties": {
                "country-id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "probability": {
                    "type": "number"
                }
            }
        },
        "dto.CreatePeopleRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "patronymic": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                }
            }
        },
        "dto.ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "dto.PeopleResponse": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer"
                },
                "country": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.CountryResponse"
                    }
                },
                "gender": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "patronymic": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                }
            }
        },
        "dto.UpdatePeopleRequest": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer"
                },
                "country": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.CountryRequest"
                    }
                },
                "gender": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "patronymic": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                }
            }
        }
    }
}